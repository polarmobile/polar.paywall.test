[buildout]
parts +=
      test
      pep8-bin
      pep8
      coverage
      pylint-bin
      pylint

[test]
recipe = pbp.recipe.noserunner
working-directory = ${buildout:directory}
eggs =
     coverage
     ${buildout:eggs}
environment = testenv

[testenv]
NOSE_INCLUDE_EXE = true
DJANGO_SETTINGS_MODULE = polar.paywall.proxy.settings

[coverage]
recipe = zc.recipe.egg
eggs = createcoverage

[pep8-bin]
recipe = z3c.recipe.scripts
eggs =
   pep8
entry-points = pep8-bin=pep8:_main

[pep8]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    find -L src -type f -regex ".*\.py" | xargs bin/pep8-bin $@

output = ${buildout:directory}/bin/pep8
mode = 755

# :F0401: Unable to import %r (%s). Pylint has been unable to import a module.
# :C0111: *Missing docstring*
# :C0103: *Invalid name "%s" (should match %s)*
# :W0142: *Used * or ** magic*
# :W0232: *Class has no __init__ method*
# :E1101: *%s %r has no %r member*
# :R0911: Too many return statements (%s/%s)
[pylint-bin]
recipe = z3c.recipe.scripts
eggs = pylint
entry-points = pylint-bin=pylint.lint:Run
arguments = [
    '--output-format=parseable',
    '--reports=y',
    '--include-ids=y',
    '--disable=F0401,C0111,C0103,W0142,W0232,E1101,R0911',
    '--generated-members=objects',
    '--min-public-methods=0',
    '--max-public-methods=30',
    ] + sys.argv[1:]

[pylint]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    find -L src -type f -regex ".*\.py" | xargs bin/pylint-bin $@

output = ${buildout:directory}/bin/pylint
mode = 755
